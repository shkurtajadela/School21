\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename 3dviewer.info
@settitle 3dViewer 1.0 manual
@c %**end of header

@copying
This is a manual for 3dViewer v1.0 (updated February 22nd, 2024), a program to view 3D wireframe models.

Copyright @copyright{} 2024.
@end copying

@titlepage
@center @titlefont{3dViewer v1.0}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top 3dViewer_1.0
@end ifnottex

@node Overview
@chapter Overview

The 3dViewer v1.0 program is developed in C language of C11 standard using gcc compiler. Additional QT libraries and modules are used.
The program code is located in the src folder. 
The program must be built with Makefile which contains standard set of targets for GNU-programs: all, install, uninstall, clean, dvi, dist, test, gcov_report. 
Installation directory could be arbitrary, except the building one.
Modules related to model loading and affine transformations are covered with unit-tests using the Check library.
GUI implementation is based on Qt version 5.

There are only one model on the screen at a time. The program provides the ability to:
@itemize @bullet
@item Load a wireframe model from an obj file (vertices and surfaces list support only).
@item Translate the model by a given distance in relation to the X, Y, Z axes.
@item Rotate the model by a given angle relative to its X, Y, Z axes.
@item Scale the model by a given value.
@end itemize

@node Features
@section Features:

@itemize @bullet
@item The graphical user interface must contain:
@itemize @minus
@item A button to select the model file and a field to output its name.
@item A visualisation area for the wireframe model.
@item Button/buttons and input fields for translating the model.
@item Button/buttons and input fields for rotating the model.
@item Button/buttons and input fields for scaling the model.
@item Information about the uploaded model - file name, number of vertices and edges.
@end itemize
@item The program correctly process and allow user to view models with details up to 100, 1000, 10,000, 100,000, 1,000,000  vertices without freezing (a freeze is an interface inactivity of more than 0.5 seconds). 
@item A special mode "Settings". 
@itemize @minus
@item The program allow customizing the type of projection (parallel and central)
@item The program allow setting up the type (solid, dashed), color and thickness of the edges, display method (none, circle, square), color and size of the vertices
@item The program allow choosing the background color
@item Settings are saved between program restarts
@end itemize
@item A special mode "Record". 
@itemize @minus
@item The program must allow saving the captured (rendered) images as bmp and jpeg files.
@item The program must allow recording small screencasts by a special button - the current custom affine transformation of the loaded object into gif-animation (640x480)
@end itemize
@end itemize

@node Interface
@chapter Interface & output.

Mainwindow: 
@image{img/app1} 

Loaded wireframe model: 
@image{img/app2} 
@image{img/app3} 

@bye